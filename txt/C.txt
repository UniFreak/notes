Q:
    character vs character constant vs string vs string constant
    single quote vs double quote
IRC:
    <UniFreak> when K&R say `constant`, can I understand it as `literal` ?
    <kamog> UniFreak: yeah, it looks like they mean literals.
Q:
    symbolic constant vs const
IRC:
    <UniFreak> hi, in `#define PI 3.14`, we call PI a symbolic constant, then, in `const double e = 2.17`, what do we call e?
    <twkm> a variable.
    <UniFreak> twkm: doesn't const make it unvariable?
    <twkm> no.
    <LeoNerd> I'd call PI a macro
    <e> UniFreak: const doesn't make constants in C
    <twkm> but if you like to think that way, at the least it is an object.
    <gr33n3r2> yeah PI is a pre-processor macro
    <cousteau> it's a const variable
    <UniFreak> LeoNerd: so K&R is somehow confusing?
    <twkm> they call it a macro too, but refine it for when the expansion is a constant.
    <twkm> i tend to call them manifest constants.
    <UniFreak> so, what's the difference between them regarding to use scenario?
    <cousteau> I like how UniFreak probably highlighted e and that's why e answered
    <cousteau> PI is textually replaced with `3.14`, i.e. writing `PI` is the same as writing `3.14`
    <pthreat> Is there a way to print the memory address a program has
    <twkm> not portably.
    <gr33n3r2> UniFreak: to clarify about 'const' - it does declare a variable as unmodifiable, but you can create a non-const pointer to that variable and cast it, and that would allow you to modify it.
    <cousteau> whereas e is actually an object; when you use `e` you're referring to an object called "e", which is a const object.  Since it's const, it'll probably be optimized so that whenever you use `e` the compiler will replace that with the actual value rather than looking up its value in memory
    <gr33n3r2> UniFreak: const is more of a compile-time directive that tells you what you *should* do with a variable, rather than what you *can* do
    <cousteau> it also tells the compiler what optimization tricks it can do
    <pthreat> gr33n3r2: It's a good hint, hints are good
    <gr33n3r2> pthreat: it's bloody essential! Don't modify my damn consts!

Every program must have a main function

A sequence of characters in double quotes, like  "hello, world\n" , is called a character
string or string constant

All variables must be declared before they are used

char int short long float double

By definition,  char s are just small integers

'\n' is a single character

A character written between single quotes represents an integer value equal to the numerical value of the character in the machine's character set. This is called a character constant, although it is just another way to write a small integer. So, for example,  'A' is a character constant; in the ASCII character set its value is 65, the internal representation of the character A. Of course,  'A' is to be preferred over  65 : its meaning is obvious, and it is independent of a particular character set.

%d %f %o %x %c %s %%

Integer division truncates: any fractional part is discarded

Writing floating-point constants with explicit decimal points even when they have integral values
emphasizes their floating-point nature for human readers